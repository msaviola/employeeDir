{"version":3,"sources":["components/EmployeeRow.js","components/NameSortLink.js","components/NameFilterInput.js","utils/compareNames.js","components/EmployeeTable.js","App.js","index.js"],"names":["EmployeeRow","props","employeeRecord","name","first","last","location","street","number","city","state","country","email","phone","login","username","NameSortLink","href","onClick","toggleSortDirection","NameFilterInput","htmlFor","type","value","filterState","onChange","onFilterChange","id","compareNames","direction","employeeRecord1","employeeRecord2","name1","name2","result","EmployeeTable","useState","employees","filteredEmployees","setFilteredEmployees","sortedEmployees","setSortedEmployees","setFilterState","sortDirection","setSortDirection","useEffect","filteredRecords","filter","toLowerCase","startsWith","filteredEmployeesCopy","slice","sort","event","target","preventDefault","stopPropagation","map","App","employeeData","results","console","log","ReactDOM","render","document","getElementById"],"mappings":"iJAceA,MAZf,SAAqBC,GACjB,OACI,+BACI,+BAAKA,EAAMC,eAAeC,KAAKC,MAA/B,IAAuCH,EAAMC,eAAeC,KAAKE,QACjE,+BAAKJ,EAAMC,eAAeI,SAASC,OAAOC,OAA1C,IAAmDP,EAAMC,eAAeI,SAASC,OAAOJ,KAAxF,IAA+FF,EAAMC,eAAeI,SAASG,KAA7H,IAAoIR,EAAMC,eAAeI,SAASI,MAAOT,EAAMC,eAAeI,SAASK,WACvM,6BAAKV,EAAMC,eAAeU,QAC1B,6BAAKX,EAAMC,eAAeW,QAC1B,6BAAKZ,EAAMC,eAAeY,MAAMC,eCJ7BC,MAHf,SAAsBf,GAClB,OAAO,mBAAGgB,KAAK,QAAQC,QAASjB,EAAMkB,oBAA/B,wBCWIC,MAbf,SAAyBnB,GACrB,OACI,gCACI,uBAAOoB,QAAQ,eAAf,iCACA,uBACAC,KAAK,OACLC,MAAOtB,EAAMuB,YACbC,SAAUxB,EAAMyB,eAChBvB,KAAK,cACLwB,GAAG,qBCGAC,MAbf,WAAsC,IAAhBC,EAAe,uDAAH,EAC9B,OAAO,SAAUC,EAAiBC,GAC9B,IAAMC,EAAK,UAAMF,EAAgB3B,KAAKC,MAA3B,YAAoC0B,EAAgB3B,KAAKE,MAC9D4B,EAAK,UAAMF,EAAgB5B,KAAKC,MAA3B,YAAoC2B,EAAgB5B,KAAKE,MAChE6B,EAAS,EAMb,OALGF,EAAQC,EACPC,EAAS,EACFF,EAAQC,IACfC,GAAU,GAEPA,EAASL,ICmDTM,MAvDf,SAAuBlC,GAAO,MAEwBmC,mBAASnC,EAAMoC,WAFvC,mBAEnBC,EAFmB,KAEAC,EAFA,OAGoBH,mBAASE,GAH7B,mBAGnBE,EAHmB,KAGFC,EAHE,OAIYL,mBAAS,IAJrB,mBAInBZ,EAJmB,KAINkB,EAJM,OAKgBN,mBAAS,GALzB,mBAKnBO,EALmB,KAKJC,EALI,KAkC1B,OA1BAC,qBAAU,WACN,IAAIC,EAAkB7C,EAAMoC,UACR,KAAhBb,IACAsB,EAAkB7C,EAAMoC,UACnBU,QAAO,SAAA7C,GACJ,OAAOA,EAAeC,KAAKC,MAAM4C,cAAcC,WAAWzB,IACnDtB,EAAeC,KAAKE,KAAK2C,cAAcC,WAAWzB,OAGrEe,EAAqBO,KACtB,CAAC7C,EAAMoC,UAAWb,IACrBqB,qBAAU,WACN,IAAMK,EAAwBZ,EAAkBa,MAAM,GACtDD,EAAsBE,KAAKxB,EAAae,IACxCF,EAAmBS,KACpB,CAACZ,EAAmBK,IAYnB,gCACI,cAAC,EAAD,CAAiBnB,YAAaA,EAAaE,eAXnD,SAAwB2B,GAAQ,IACpB9B,EAAU8B,EAAMC,OAAhB/B,MACRmB,EAAenB,MAUX,kCACI,gCACI,6BACI,6BAAI,cAAC,EAAD,CAAcJ,oBAXtC,SAA6BkC,GACzBA,EAAME,iBACNF,EAAMG,kBACNZ,GAAkB,EAAID,YAWd,gCAEQH,EAAgBiB,KAAI,SAAAvD,GAAc,OAC7B,cAAC,EAAD,CACGA,eAAgBA,GACXA,EAAeyB,GAAGJ,mB,OCvCxCmC,MARf,WACE,OACE,cAAC,EAAD,CAAerB,UAAWsB,EAAaC,WAO3CC,QAAQC,IAAIH,EAAaC,S,MCXzBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.94feb99c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeRow(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.employeeRecord.name.first} {props.employeeRecord.name.last}</td>\r\n            <td>{props.employeeRecord.location.street.number} {props.employeeRecord.location.street.name} {props.employeeRecord.location.city} {props.employeeRecord.location.state}{props.employeeRecord.location.country}</td>\r\n            <td>{props.employeeRecord.email}</td>\r\n            <td>{props.employeeRecord.phone}</td>\r\n            <td>{props.employeeRecord.login.username}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default EmployeeRow;","import React from \"react\";\r\n\r\nfunction NameSortLink(props) {\r\n    return <a href=\"#home\" onClick={props.toggleSortDirection}>Full Name</a>;\r\n}\r\nexport default NameSortLink;","import React from \"react\";\r\nfunction NameFilterInput(props) {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"filter-input\">Filter List By Name</label>\r\n            <input \r\n            type=\"text\"\r\n            value={props.filterState}\r\n            onChange={props.onFilterChange}\r\n            name=\"filterInput\"\r\n            id=\"filter-input\" />\r\n        </div>\r\n    )\r\n}\r\nexport default NameFilterInput;","function compareNames(direction = 1) {\r\n    return function (employeeRecord1, employeeRecord2) {\r\n        const name1 = `${employeeRecord1.name.first} ${employeeRecord1.name.last}`\r\n        const name2 = `${employeeRecord2.name.first} ${employeeRecord2.name.last}`\r\n        let result = 0;\r\n        if(name1 > name2) {\r\n            result = 1;\r\n        } else if (name1 < name2) {\r\n            result = -1;\r\n        }\r\n        return result * direction;\r\n    }\r\n}\r\nexport default compareNames;","import React, { useState, useEffect } from \"react\";\r\nimport EmployeeRow from \"./EmployeeRow\";\r\nimport NameSortLink from \"./NameSortLink\";\r\nimport NameFilterInput from \"./NameFilterInput\";\r\nimport compareNames from \"../utils/compareNames\";\r\n\r\nfunction EmployeeTable(props) {\r\n    // This becomes \"this.state = {}\"\r\n    const [filteredEmployees, setFilteredEmployees] = useState(props.employees);\r\n    const [sortedEmployees, setSortedEmployees] = useState(filteredEmployees);\r\n    const [filterState, setFilterState] = useState(\"\");\r\n    const [sortDirection, setSortDirection] = useState(1);\r\n    // Use effect goes from useEffect to componentDidMount (for startup)\r\n    // and your change function for each update\r\n    useEffect(function () {\r\n        let filteredRecords = props.employees;\r\n        if (filterState !== '') {\r\n            filteredRecords = props.employees\r\n                .filter(employeeRecord => {\r\n                    return employeeRecord.name.first.toLowerCase().startsWith(filterState)\r\n                        || employeeRecord.name.last.toLowerCase().startsWith(filterState);\r\n                });\r\n        }\r\n        setFilteredEmployees(filteredRecords);\r\n    }, [props.employees, filterState]);\r\n    useEffect(function () {\r\n        const filteredEmployeesCopy = filteredEmployees.slice(0);\r\n        filteredEmployeesCopy.sort(compareNames(sortDirection));\r\n        setSortedEmployees(filteredEmployeesCopy);\r\n    }, [filteredEmployees, sortDirection]);\r\n    // These stay basically the same. They just use this.setState\r\n    function onFilterChange(event) {\r\n        const { value } = event.target;\r\n        setFilterState(value);\r\n    }\r\n    function toggleSortDirection(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        setSortDirection(-1 * sortDirection);\r\n    }\r\n    return (\r\n        <div>\r\n            <NameFilterInput filterState={filterState} onFilterChange={onFilterChange}></NameFilterInput>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th><NameSortLink toggleSortDirection={toggleSortDirection} /></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        sortedEmployees.map(employeeRecord =>\r\n                            (<EmployeeRow\r\n                                employeeRecord={employeeRecord}\r\n                                key={employeeRecord.id.value} />))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default EmployeeTable;","// import './App.css';\r\n\r\n\r\nimport EmployeeTable from \"./components/EmployeeTable\";\r\n\r\nimport employeeData from \"./employees.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <EmployeeTable employees={employeeData.results} />\r\n    \r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\nconsole.log(employeeData.results);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}